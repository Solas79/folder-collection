<!-- Lies die Version aus src/manifest.json und setze damit $(Version) fÃ¼r den Build -->
<UsingTask TaskName="GetManifestVersion"
           TaskFactory="CodeTaskFactory"
           AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
  <ParameterGroup>
    <ManifestPath ParameterType="System.String" Required="true" />
    <VersionOut ParameterType="System.String" Output="true" />
  </ParameterGroup>
  <Task>
    <Reference Include="System.Text.Json" />
    <Using Namespace="System" />
    <Using Namespace="System.IO" />
    <Using Namespace="System.Text.Json" />
    <Code Type="Fragment" Language="cs"><![CDATA[
      var json = File.ReadAllText(ManifestPath);
      using var doc = JsonDocument.Parse(json);
      if (!doc.RootElement.TryGetProperty("version", out var verElem))
      {
          Log.LogError($"No 'version' field found in {ManifestPath}.");
          return false;
      }
      VersionOut = verElem.GetString() ?? "";
      if (string.IsNullOrWhiteSpace(VersionOut))
      {
          Log.LogError($"Empty 'version' value in {ManifestPath}.");
          return false;
      }
      return true;
    ]]></Code>
  </Task>
</UsingTask>

<PropertyGroup>
  <!-- Standardpfad zu deiner manifest.json relativ zum .csproj -->
  <PluginManifestPath>$(MSBuildProjectDirectory)\manifest.json</PluginManifestPath>
</PropertyGroup>

<Target Name="SetVersionFromManifest" BeforeTargets="GetVersion">
  <GetManifestVersion ManifestPath="$(PluginManifestPath)">
    <Output TaskParameter="VersionOut" PropertyName="ManifestVersion" />
  </GetManifestVersion>

  <!-- Setze die Projektversion nur, wenn sie noch nicht extern (z. B. per /p:Version=...) gesetzt wurde -->
  <PropertyGroup Condition="'$(Version)'==''">
    <Version>$(ManifestVersion)</Version>
    <FileVersion>$(ManifestVersion)</FileVersion>
    <AssemblyVersion>$(ManifestVersion)</AssemblyVersion>
    <InformationalVersion>$(ManifestVersion)</InformationalVersion>
  </PropertyGroup>

  <Message Text="Version set from manifest.json: $(Version)" Importance="High" />
</Target>
