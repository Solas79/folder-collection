name: Build and Release Jellyfin Plugin

on:
  push:
    tags:
      - 'v*'              # z. B. v0.1.3
  workflow_dispatch:

permissions:
  contents: write         # nÃ¶tig fÃ¼r Release + Push auf main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout (vollstÃ¤ndig, fÃ¼r Push auf main)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore
        run: dotnet restore src/Jellyfin.Plugin.CollectionsByFolder/Jellyfin.Plugin.CollectionsByFolder.csproj

      - name: Build (DLL only, no publish)
        run: dotnet build src/Jellyfin.Plugin.CollectionsByFolder/Jellyfin.Plugin.CollectionsByFolder.csproj --configuration Release --no-restore

      # ðŸ‘‰ Nur die Plugin-DLL ins ZIP (keine Jellyfin-Core-DLLs!)
      - name: Package (zip the plugin DLL only)
        run: |
          set -e
          OUTDIR=out
          DLL=src/Jellyfin.Plugin.CollectionsByFolder/bin/Release/net8.0/Jellyfin.Plugin.CollectionsByFolder.dll
          mkdir -p "$OUTDIR"
          cp "$DLL" "$OUTDIR"/
          (cd "$OUTDIR" && zip -9r Jellyfin.Plugin.CollectionsByFolder.zip Jellyfin.Plugin.CollectionsByFolder.dll)
          ls -l "$OUTDIR"

      - name: Compute MD5 checksum (lowercase)
        id: md5
        run: |
          echo "md5=$(md5sum out/Jellyfin.Plugin.CollectionsByFolder.zip | awk '{print tolower($1)}')" >> $GITHUB_OUTPUT

      - name: Generate manifest.json (fÃ¼r den aktuellen Tag)
        id: manifest
        shell: bash
        run: |
          TAG="${GITHUB_REF_NAME}"          # z. B. v0.1.3
          VERSION="${TAG#v}.0"              # â†’ 0.1.3.0
          CHECKSUM="${{ steps.md5.outputs.md5 }}"
          TS="$(date -u +"%Y-%m-%dT%H:%M:%SZ")"

          cat > manifest.json <<JSON
          [
            {
              "category": "Library",
              "guid": "f58f3a40-6a8a-48e8-9b3a-9d7f0b6a3a41",
              "name": "CollectionsByFolder",
              "owner": "Solas79",
              "overview": "Erstellt/aktualisiert Collections anhand des letzten Ordnernamens.",
              "description": "Mehrere Pfade, PrÃ¤fix/Suffix, Blacklist, Mindestanzahl und tÃ¤glicher Scan inkl. 'Jetzt scannen'-Button.",
              "versions": [
                {
                  "version": "${VERSION}",
                  "targetAbi": "10.10.0.0",
                  "sourceUrl": "https://github.com/${{ github.repository }}/releases/download/${TAG}/Jellyfin.Plugin.CollectionsByFolder.zip",
                  "checksum": "${CHECKSUM}",
                  "timestamp": "${TS}",
                  "changelog": "Automatischer Build fÃ¼r ${TAG}"
                }
              ]
            }
          ]
          JSON
          cat manifest.json

      - name: Create / Update GitHub Release (attach ZIP + manifest.json)
        uses: softprops/action-gh-release@v2
        with:
          name: CollectionsByFolder ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          files: |
            out/Jellyfin.Plugin.CollectionsByFolder.zip
            manifest.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Commit manifest.json to main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          set -e
          TMP="$(mktemp)"
          cp -f manifest.json "$TMP"

          git fetch origin main
          git checkout -B main origin/main

          mv -f "$TMP" manifest.json
          git add manifest.json

          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git commit -m "Update manifest for ${GITHUB_REF_NAME}"
            git push origin main
          fi
